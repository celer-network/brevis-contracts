{
  "address": "0xE099433f8bF26edd8ef2bB105a0203aB763aFC87",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "genesisTime",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "genesisValidatorsRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint64[]",
          "name": "_forkEpochs",
          "type": "uint64[]"
        },
        {
          "internalType": "bytes4[]",
          "name": "_forkVersions",
          "type": "bytes4[]"
        },
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "slot",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "proposerIndex",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "parentRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "stateRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "bodyRoot",
              "type": "bytes32"
            }
          ],
          "internalType": "struct BeaconBlockHeader",
          "name": "_finalizedHeader",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "syncCommitteeRoot",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "syncCommitteePoseidonRoot",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_zkVerifier",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "epoch",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "forkVersion",
          "type": "bytes4"
        }
      ],
      "name": "ForkVersionUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "slot",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "stateRoot",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "executionStateRoot",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "finalized",
          "type": "bool"
        }
      ],
      "name": "HeaderUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "period",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "sszRoot",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "poseidonRoot",
          "type": "bytes32"
        }
      ],
      "name": "SyncCommitteeUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "bestValidUpdate",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint64",
                  "name": "slot",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "proposerIndex",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "parentRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "stateRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "bodyRoot",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct BeaconBlockHeader",
              "name": "beacon",
              "type": "tuple"
            },
            {
              "internalType": "bytes32",
              "name": "executionStateRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "executionStateRootBranch",
              "type": "bytes32[]"
            }
          ],
          "internalType": "struct HeaderWithExecution",
          "name": "attestedHeader",
          "type": "tuple"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint64",
                  "name": "slot",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "proposerIndex",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "parentRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "stateRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "bodyRoot",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct BeaconBlockHeader",
              "name": "beacon",
              "type": "tuple"
            },
            {
              "internalType": "bytes32",
              "name": "executionStateRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "executionStateRootBranch",
              "type": "bytes32[]"
            }
          ],
          "internalType": "struct HeaderWithExecution",
          "name": "finalizedHeader",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "nextSyncCommitteeRoot",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "nextSyncCommitteePoseidonRoot",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "uint256[2]",
              "name": "a",
              "type": "uint256[2]"
            },
            {
              "internalType": "uint256[2][2]",
              "name": "b",
              "type": "uint256[2][2]"
            },
            {
              "internalType": "uint256[2]",
              "name": "c",
              "type": "uint256[2]"
            },
            {
              "internalType": "uint256[2]",
              "name": "commitment",
              "type": "uint256[2]"
            }
          ],
          "internalType": "struct Proof",
          "name": "nextSyncCommitteeRootMappingProof",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "participation",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "poseidonRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "commitment",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256[2]",
                  "name": "a",
                  "type": "uint256[2]"
                },
                {
                  "internalType": "uint256[2][2]",
                  "name": "b",
                  "type": "uint256[2][2]"
                },
                {
                  "internalType": "uint256[2]",
                  "name": "c",
                  "type": "uint256[2]"
                },
                {
                  "internalType": "uint256[2]",
                  "name": "commitment",
                  "type": "uint256[2]"
                }
              ],
              "internalType": "struct Proof",
              "name": "proof",
              "type": "tuple"
            }
          ],
          "internalType": "struct SyncAggregate",
          "name": "syncAggregate",
          "type": "tuple"
        },
        {
          "internalType": "uint64",
          "name": "signatureSlot",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "forkVersion",
          "type": "bytes4"
        }
      ],
      "name": "computeDomain",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "slot",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "proposerIndex",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "parentRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "stateRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "bodyRoot",
              "type": "bytes32"
            }
          ],
          "internalType": "struct BeaconBlockHeader",
          "name": "header",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "domain",
          "type": "bytes32"
        }
      ],
      "name": "computeSigningRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentSyncCommitteePoseidonRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentSyncCommitteeRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finalizedExecutionStateRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finalizedExecutionStateRootAndSlot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "root",
          "type": "bytes32"
        },
        {
          "internalType": "uint64",
          "name": "slot",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finalizedExecutionStateRootSlot",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finalizedHeader",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "slot",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "proposerIndex",
          "type": "uint64"
        },
        {
          "internalType": "bytes32",
          "name": "parentRoot",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "stateRoot",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "bodyRoot",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "forkEpochs",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "forkVersions",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestFinalizedSlotAndCommitteeRoots",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "slot",
          "type": "uint64"
        },
        {
          "internalType": "bytes32",
          "name": "currentRoot",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "nextRoot",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextSyncCommitteePoseidonRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextSyncCommitteeRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "processLightClientForceUpdate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "uint64",
                      "name": "slot",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "proposerIndex",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "parentRoot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "stateRoot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "bodyRoot",
                      "type": "bytes32"
                    }
                  ],
                  "internalType": "struct BeaconBlockHeader",
                  "name": "beacon",
                  "type": "tuple"
                },
                {
                  "internalType": "bytes32",
                  "name": "executionStateRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "executionStateRootBranch",
                  "type": "bytes32[]"
                }
              ],
              "internalType": "struct HeaderWithExecution",
              "name": "attestedHeader",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "uint64",
                      "name": "slot",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "proposerIndex",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "parentRoot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "stateRoot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "bodyRoot",
                      "type": "bytes32"
                    }
                  ],
                  "internalType": "struct BeaconBlockHeader",
                  "name": "beacon",
                  "type": "tuple"
                },
                {
                  "internalType": "bytes32",
                  "name": "executionStateRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "executionStateRootBranch",
                  "type": "bytes32[]"
                }
              ],
              "internalType": "struct HeaderWithExecution",
              "name": "finalizedHeader",
              "type": "tuple"
            },
            {
              "internalType": "bytes32[]",
              "name": "finalityBranch",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes32",
              "name": "nextSyncCommitteeRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "nextSyncCommitteeBranch",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes32",
              "name": "nextSyncCommitteePoseidonRoot",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "uint256[2]",
                  "name": "a",
                  "type": "uint256[2]"
                },
                {
                  "internalType": "uint256[2][2]",
                  "name": "b",
                  "type": "uint256[2][2]"
                },
                {
                  "internalType": "uint256[2]",
                  "name": "c",
                  "type": "uint256[2]"
                },
                {
                  "internalType": "uint256[2]",
                  "name": "commitment",
                  "type": "uint256[2]"
                }
              ],
              "internalType": "struct Proof",
              "name": "nextSyncCommitteeRootMappingProof",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint64",
                  "name": "participation",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "poseidonRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "commitment",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256[2]",
                      "name": "a",
                      "type": "uint256[2]"
                    },
                    {
                      "internalType": "uint256[2][2]",
                      "name": "b",
                      "type": "uint256[2][2]"
                    },
                    {
                      "internalType": "uint256[2]",
                      "name": "c",
                      "type": "uint256[2]"
                    },
                    {
                      "internalType": "uint256[2]",
                      "name": "commitment",
                      "type": "uint256[2]"
                    }
                  ],
                  "internalType": "struct Proof",
                  "name": "proof",
                  "type": "tuple"
                }
              ],
              "internalType": "struct SyncAggregate",
              "name": "syncAggregate",
              "type": "tuple"
            },
            {
              "internalType": "uint64",
              "name": "signatureSlot",
              "type": "uint64"
            }
          ],
          "internalType": "struct LightClientUpdate",
          "name": "update",
          "type": "tuple"
        }
      ],
      "name": "processLightClientUpdate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "epoch",
          "type": "uint64"
        },
        {
          "internalType": "bytes4",
          "name": "forkVersion",
          "type": "bytes4"
        }
      ],
      "name": "updateForkVersion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zkVerifier",
      "outputs": [
        {
          "internalType": "contract IZkVerifier",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x109e84b92435072e8f4e98917235b21862d5edf0f64758c799b6ede22574dc6f",
  "receipt": {
    "to": null,
    "from": "0x9532f934EfcE6c4Bf5BA078b25fDd81a780FBdfB",
    "contractAddress": "0xE099433f8bF26edd8ef2bB105a0203aB763aFC87",
    "transactionIndex": 0,
    "gasUsed": "3812308",
    "logsBloom": "0x
    "blockHash": "0xbef00dc5cb0f4f64be1b4b0a080f970ac5eecf7c0e5edf8caa96f2e30e11194a",
    "transactionHash": "0x109e84b92435072e8f4e98917235b21862d5edf0f64758c799b6ede22574dc6f",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 28176572,
        "transactionHash": "0x109e84b92435072e8f4e98917235b21862d5edf0f64758c799b6ede22574dc6f",
        "address": "0xE099433f8bF26edd8ef2bB105a0203aB763aFC87",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000009532f934efce6c4bf5ba078b25fdd81a780fbdfb"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xbef00dc5cb0f4f64be1b4b0a080f970ac5eecf7c0e5edf8caa96f2e30e11194a"
      }
    ],
    "blockNumber": 28176572,
    "cumulativeGasUsed": "3812308",
    "status": 1,
    "byzantium": true
  },
  "args": [
    1616508000,
    "0x043db0d9a83813551ee2f33450d23797757d430911a9320530ad8a0eabc43efb",
    [
      0,
      36660,
      112260,
      162304
    ],
    [
      "0x00001020",
      "0x01001020",
      "0x02001020",
      "0x03001020"
    ],
    {
      "slot": "5211007",
      "proposerIndex": "244391",
      "parentRoot": "0x675470c38e0a74f5cf147529a683323c372699a8d8f493a7540afbe3ee823df7",
      "stateRoot": "0xec81ad00910a457dad9fcea92130db7054ba50371a8e6813643b974d315ee2d8",
      "bodyRoot": "0x8f929507493ec582e9de84159018eb40a06389007a6af3b06b3dd48eb7a28534"
    },
    "0x28bfcd34b4a658a55a6fecf00126c9a3f7e468bbf76ac08af1472016c9903a81",
    "0x1d997dff5d143d9860a9f72dc7ee01faa0bc3a335d88749668d0d80b770e8643",
    "0x7c65F2C41ef9C88960cEdB7c6Ef311B9505F3e07"
  ],
  "numDeployments": 3,
  "solcInputHash": "ac3c6575274974c61d074c842a8ad25c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"genesisTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"genesisValidatorsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint64[]\",\"name\":\"_forkEpochs\",\"type\":\"uint64[]\"},{\"internalType\":\"bytes4[]\",\"name\":\"_forkVersions\",\"type\":\"bytes4[]\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"slot\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"proposerIndex\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"parentRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"bodyRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct BeaconBlockHeader\",\"name\":\"_finalizedHeader\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"syncCommitteeRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"syncCommitteePoseidonRoot\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_zkVerifier\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"epoch\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"forkVersion\",\"type\":\"bytes4\"}],\"name\":\"ForkVersionUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slot\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"executionStateRoot\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"finalized\",\"type\":\"bool\"}],\"name\":\"HeaderUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sszRoot\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"poseidonRoot\",\"type\":\"bytes32\"}],\"name\":\"SyncCommitteeUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"bestValidUpdate\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"slot\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"proposerIndex\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"parentRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"bodyRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct BeaconBlockHeader\",\"name\":\"beacon\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"executionStateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"executionStateRootBranch\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct HeaderWithExecution\",\"name\":\"attestedHeader\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"slot\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"proposerIndex\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"parentRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"bodyRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct BeaconBlockHeader\",\"name\":\"beacon\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"executionStateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"executionStateRootBranch\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct HeaderWithExecution\",\"name\":\"finalizedHeader\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"nextSyncCommitteeRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"nextSyncCommitteePoseidonRoot\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"commitment\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct Proof\",\"name\":\"nextSyncCommitteeRootMappingProof\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"participation\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"poseidonRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"commitment\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"commitment\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct Proof\",\"name\":\"proof\",\"type\":\"tuple\"}],\"internalType\":\"struct SyncAggregate\",\"name\":\"syncAggregate\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"signatureSlot\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"forkVersion\",\"type\":\"bytes4\"}],\"name\":\"computeDomain\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"slot\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"proposerIndex\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"parentRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"bodyRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct BeaconBlockHeader\",\"name\":\"header\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"domain\",\"type\":\"bytes32\"}],\"name\":\"computeSigningRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentSyncCommitteePoseidonRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentSyncCommitteeRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalizedExecutionStateRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalizedExecutionStateRootAndSlot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"slot\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalizedExecutionStateRootSlot\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalizedHeader\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"slot\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"proposerIndex\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"parentRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"bodyRoot\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"forkEpochs\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"forkVersions\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestFinalizedSlotAndCommitteeRoots\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"slot\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"currentRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"nextRoot\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextSyncCommitteePoseidonRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextSyncCommitteeRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"processLightClientForceUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"slot\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"proposerIndex\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"parentRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"bodyRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct BeaconBlockHeader\",\"name\":\"beacon\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"executionStateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"executionStateRootBranch\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct HeaderWithExecution\",\"name\":\"attestedHeader\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"slot\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"proposerIndex\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"parentRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"bodyRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct BeaconBlockHeader\",\"name\":\"beacon\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"executionStateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"executionStateRootBranch\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct HeaderWithExecution\",\"name\":\"finalizedHeader\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"finalityBranch\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32\",\"name\":\"nextSyncCommitteeRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"nextSyncCommitteeBranch\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32\",\"name\":\"nextSyncCommitteePoseidonRoot\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"commitment\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct Proof\",\"name\":\"nextSyncCommitteeRootMappingProof\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"participation\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"poseidonRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"commitment\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"commitment\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct Proof\",\"name\":\"proof\",\"type\":\"tuple\"}],\"internalType\":\"struct SyncAggregate\",\"name\":\"syncAggregate\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"signatureSlot\",\"type\":\"uint64\"}],\"internalType\":\"struct LightClientUpdate\",\"name\":\"update\",\"type\":\"tuple\"}],\"name\":\"processLightClientUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"epoch\",\"type\":\"uint64\"},{\"internalType\":\"bytes4\",\"name\":\"forkVersion\",\"type\":\"bytes4\"}],\"name\":\"updateForkVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zkVerifier\",\"outputs\":[{\"internalType\":\"contract IZkVerifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"computeDomain(bytes4)\":{\"notice\":\"https://github.com/ethereum/consensus-specs/blob/dev/specs/phase0/beacon-chain.md#compute_domain\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/light-client/EthereumLightClient.sol\":\"EthereumLightClient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/interfaces/IEthereumLightClient.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity 0.8.18;\\n\\ninterface IEthereumLightClient {\\n    function finalizedExecutionStateRootAndSlot() external view returns (bytes32 root, uint64 slot);\\n}\\n\",\"keccak256\":\"0x8cc0b8d512c5e0cd18eb0fac842169a65eeca67d5e67cad48d19a52978fb3d73\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/light-client/Constants.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicensed\\npragma solidity 0.8.18;\\n\\n// light client security params\\nuint256 constant MIN_SYNC_COMMITTEE_PARTICIPANTS = 1;\\nuint256 constant UPDATE_TIMEOUT = 86400;\\n\\n// beacon chain constants\\nuint256 constant FINALIZED_ROOT_INDEX = 105;\\nuint256 constant NEXT_SYNC_COMMITTEE_INDEX = 55;\\n// https://github.com/ethereum/consensus-specs/blob/dev/specs/capella/light-client/sync-protocol.md\\n// bodyRoot -> executionRoot -> stateRoot\\n// bodyRoot to executionRoot is 4 layers, executionRoot to stateRoot is 4 layers, executionRoot is is at gindex 25 from bodyRoot\\n// so to get stateRoot's gindex:\\n// 2 << 7 | 9 * 2 << 3 | 2 = 402\\nuint256 constant EXECUTION_STATE_ROOT_INDEX = 402;\\nuint256 constant SYNC_COMMITTEE_SIZE = 512;\\nuint64 constant SLOTS_PER_EPOCH = 32;\\nuint64 constant EPOCHS_PER_SYNC_COMMITTEE_PERIOD = 256;\\nbytes32 constant DOMAIN_SYNC_COMMITTEE = bytes32(uint256(0x07) << 248);\\nuint256 constant SLOT_LENGTH_SECONDS = 12;\\n\",\"keccak256\":\"0xece21dd3a4129c0fcc25636cd5715ef7c6a08823d19ca7b88b568cd3302a0505\",\"license\":\"Unlicensed\"},\"contracts/light-client/EthereumLightClient.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicensed\\npragma solidity 0.8.18;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nimport \\\"../interfaces/IEthereumLightClient.sol\\\";\\n\\nimport \\\"./IZkVerifier.sol\\\";\\nimport \\\"./LightClientStore.sol\\\";\\nimport \\\"./SSZ.sol\\\";\\nimport \\\"./Constants.sol\\\";\\nimport \\\"./Types.sol\\\";\\n\\ncontract EthereumLightClient is IEthereumLightClient, LightClientStore, Ownable {\\n    event HeaderUpdated(uint256 slot, bytes32 stateRoot, bytes32 executionStateRoot, bool finalized);\\n    event SyncCommitteeUpdated(uint256 period, bytes32 sszRoot, bytes32 poseidonRoot);\\n    event ForkVersionUpdated(uint64 epoch, bytes4 forkVersion);\\n\\n    constructor(\\n        uint256 genesisTime,\\n        bytes32 genesisValidatorsRoot,\\n        uint64[] memory _forkEpochs,\\n        bytes4[] memory _forkVersions,\\n        BeaconBlockHeader memory _finalizedHeader,\\n        bytes32 syncCommitteeRoot,\\n        bytes32 syncCommitteePoseidonRoot,\\n        address _zkVerifier\\n    )\\n        LightClientStore(\\n            genesisTime,\\n            genesisValidatorsRoot,\\n            _forkEpochs,\\n            _forkVersions,\\n            _finalizedHeader,\\n            syncCommitteeRoot,\\n            syncCommitteePoseidonRoot,\\n            _zkVerifier\\n        )\\n    {}\\n\\n    function latestFinalizedSlotAndCommitteeRoots()\\n        external\\n        view\\n        returns (uint64 slot, bytes32 currentRoot, bytes32 nextRoot)\\n    {\\n        return (finalizedHeader.slot, currentSyncCommitteeRoot, nextSyncCommitteeRoot);\\n    }\\n\\n    function finalizedExecutionStateRootAndSlot() external view returns (bytes32 root, uint64 slot) {\\n        return (finalizedExecutionStateRoot, finalizedExecutionStateRootSlot);\\n    }\\n\\n    function updateForkVersion(uint64 epoch, bytes4 forkVersion) external onlyOwner {\\n        require(forkVersion != bytes4(0), \\\"bad fork version\\\");\\n        forkEpochs.push(epoch);\\n        forkVersions.push(forkVersion);\\n        emit ForkVersionUpdated(epoch, forkVersion);\\n    }\\n\\n    function processLightClientForceUpdate() external onlyOwner {\\n        require(currentSlot() > finalizedHeader.slot + UPDATE_TIMEOUT, \\\"timeout not passed\\\");\\n        require(bestValidUpdate.attestedHeader.beacon.slot > 0, \\\"no best valid update\\\");\\n\\n        // Forced best update when the update timeout has elapsed.\\n        // Because the apply logic waits for finalizedHeader.beacon.slot to indicate sync committee fin,\\n        // the attestedHeader may be treated as finalizedHeader in extended periods of non-fin\\n        // to guarantee progression into later sync committee periods according to isBetterUpdate().\\n        if (bestValidUpdate.finalizedHeader.beacon.slot <= finalizedHeader.slot) {\\n            bestValidUpdate.finalizedHeader = bestValidUpdate.attestedHeader;\\n        }\\n        applyLightClientUpdate(bestValidUpdate);\\n        delete bestValidUpdate;\\n    }\\n\\n    function processLightClientUpdate(LightClientUpdate memory update) public {\\n        validateLightClientUpdate(update);\\n\\n        // Update the best update in case we have to force-update to it if the timeout elapses\\n        if (isBetterUpdate(update, bestValidUpdate)) {\\n            bestValidUpdate = update;\\n        }\\n\\n        // Apply fin update\\n        bool updateHasFinalizedNextSyncCommittee = hasNextSyncCommitteeProof(update) &&\\n            hasFinalityProof(update) &&\\n            computeSyncCommitteePeriodAtSlot(update.finalizedHeader.beacon.slot) ==\\n            computeSyncCommitteePeriodAtSlot(update.attestedHeader.beacon.slot) &&\\n            nextSyncCommitteeRoot == bytes32(0);\\n        if (\\n            hasSupermajority(update.syncAggregate.participation) &&\\n            (update.finalizedHeader.beacon.slot > finalizedHeader.slot || updateHasFinalizedNextSyncCommittee)\\n        ) {\\n            applyLightClientUpdate(update);\\n            delete bestValidUpdate;\\n        }\\n    }\\n\\n    function validateLightClientUpdate(LightClientUpdate memory update) private view {\\n        // Verify sync committee has sufficient participants\\n        require(update.syncAggregate.participation > MIN_SYNC_COMMITTEE_PARTICIPANTS, \\\"not enough participation\\\");\\n        // Verify update does not skip a sync committee period\\n        require(\\n            currentSlot() > update.attestedHeader.beacon.slot &&\\n                update.attestedHeader.beacon.slot > update.finalizedHeader.beacon.slot,\\n            \\\"bad slot\\\"\\n        );\\n        uint64 storePeriod = computeSyncCommitteePeriodAtSlot(finalizedHeader.slot);\\n        uint64 updatePeriod = computeSyncCommitteePeriodAtSlot(update.finalizedHeader.beacon.slot);\\n        require(updatePeriod == storePeriod || updatePeriod == storePeriod + 1);\\n\\n        // Verify update is relavant\\n        uint64 updateAttestedPeriod = computeSyncCommitteePeriodAtSlot(update.attestedHeader.beacon.slot);\\n        bool updateHasNextSyncCommittee = nextSyncCommitteeRoot == bytes32(0) &&\\n            hasNextSyncCommitteeProof(update) &&\\n            updateAttestedPeriod == storePeriod;\\n        // since sync committee update prefers older header (see isBetterUpdate), an update either\\n        // needs to have a newer header or it should have sync committee update.\\n        require(update.attestedHeader.beacon.slot > finalizedHeader.slot || updateHasNextSyncCommittee);\\n\\n        // Verify that the finalityBranch, if present, confirms finalizedHeader\\n        // to match the finalized checkpoint root saved in the state of attestedHeader.\\n        // Note that the genesis finalized checkpoint root is represented as a zero hash.\\n        if (!hasFinalityProof(update)) {\\n            require(isEmptyHeader(update.finalizedHeader), \\\"no fin proof\\\");\\n        } else {\\n            // genesis block header\\n            if (update.finalizedHeader.beacon.slot == 0) {\\n                require(isEmptyHeader(update.finalizedHeader), \\\"genesis header should be empty\\\");\\n            } else {\\n                bool isValidFinalityProof = SSZ.isValidMerkleBranch(\\n                    SSZ.hashTreeRoot(update.finalizedHeader.beacon),\\n                    update.finalityBranch,\\n                    FINALIZED_ROOT_INDEX,\\n                    update.attestedHeader.beacon.stateRoot\\n                );\\n                require(isValidFinalityProof, \\\"bad fin proof\\\");\\n            }\\n        }\\n\\n        // Verify finalizedExecutionStateRoot\\n        if (!hasFinalizedExecutionProof(update)) {\\n            require(update.finalizedHeader.executionStateRoot == bytes32(0), \\\"no exec fin proof\\\");\\n        } else {\\n            require(hasFinalityProof(update), \\\"no exec fin proof\\\");\\n            bool isValidFinalizedExecutionRootProof = SSZ.isValidMerkleBranch(\\n                update.finalizedHeader.executionStateRoot,\\n                update.finalizedHeader.executionStateRootBranch,\\n                EXECUTION_STATE_ROOT_INDEX,\\n                update.finalizedHeader.beacon.bodyRoot\\n            );\\n            require(isValidFinalizedExecutionRootProof, \\\"bad exec fin proof\\\");\\n        }\\n\\n        // Verify that the update's nextSyncCommittee, if present, actually is the next sync committee\\n        // saved in the state of the update's attested header\\n        if (!hasNextSyncCommitteeProof(update)) {\\n            require(\\n                update.nextSyncCommitteeRoot == bytes32(0) && update.nextSyncCommitteePoseidonRoot == bytes32(0),\\n                \\\"no next sync committee proof\\\"\\n            );\\n        } else {\\n            if (updateAttestedPeriod == storePeriod && nextSyncCommitteeRoot != bytes32(0)) {\\n                require(update.nextSyncCommitteeRoot == nextSyncCommitteeRoot, \\\"bad next sync committee\\\");\\n            }\\n            bool isValidSyncCommitteeProof = SSZ.isValidMerkleBranch(\\n                update.nextSyncCommitteeRoot,\\n                update.nextSyncCommitteeBranch,\\n                NEXT_SYNC_COMMITTEE_INDEX,\\n                update.attestedHeader.beacon.stateRoot\\n            );\\n            require(isValidSyncCommitteeProof, \\\"bad next sync committee proof\\\");\\n            bool isValidCommitteeRootMappingProof = zkVerifier.verifySyncCommitteeRootMappingProof(\\n                update.nextSyncCommitteeRoot,\\n                update.nextSyncCommitteePoseidonRoot,\\n                update.nextSyncCommitteeRootMappingProof\\n            );\\n            require(isValidCommitteeRootMappingProof, \\\"bad next sync committee root mapping proof\\\");\\n        }\\n\\n        // Verify sync committee signature ZK proof\\n        bytes4 forkVersion = computeForkVersion(computeEpochAtSlot(update.signatureSlot));\\n        bytes32 domain = computeDomain(forkVersion);\\n        bytes32 signingRoot = computeSigningRoot(update.attestedHeader.beacon, domain);\\n        bytes32 activeSyncCommitteePoseidonRoot;\\n        if (updatePeriod == storePeriod) {\\n            require(currentSyncCommitteePoseidonRoot == update.syncAggregate.poseidonRoot, \\\"bad poseidon root\\\");\\n            activeSyncCommitteePoseidonRoot = currentSyncCommitteePoseidonRoot;\\n        } else if (updatePeriod == storePeriod + 1) {\\n            require(nextSyncCommitteePoseidonRoot == update.syncAggregate.poseidonRoot, \\\"bad poseidon root\\\");\\n            activeSyncCommitteePoseidonRoot = nextSyncCommitteePoseidonRoot;\\n        }\\n        require(\\n            zkVerifier.verifySignatureProof(\\n                signingRoot,\\n                activeSyncCommitteePoseidonRoot,\\n                update.syncAggregate.participation,\\n                update.syncAggregate.commitment,\\n                update.syncAggregate.proof\\n            ),\\n            \\\"bad bls sig proof\\\"\\n        );\\n    }\\n\\n    function applyLightClientUpdate(LightClientUpdate memory update) private {\\n        uint64 storePeriod = computeSyncCommitteePeriodAtSlot(finalizedHeader.slot);\\n        uint64 updateFinalizedPeriod = computeSyncCommitteePeriodAtSlot(update.finalizedHeader.beacon.slot);\\n        if (nextSyncCommitteeRoot == bytes32(0)) {\\n            require(updateFinalizedPeriod == storePeriod, \\\"mismatch period\\\");\\n            nextSyncCommitteeRoot = update.nextSyncCommitteeRoot;\\n            nextSyncCommitteePoseidonRoot = update.nextSyncCommitteePoseidonRoot;\\n            emit SyncCommitteeUpdated(updateFinalizedPeriod + 1, nextSyncCommitteeRoot, nextSyncCommitteePoseidonRoot);\\n        } else if (updateFinalizedPeriod == storePeriod + 1) {\\n            currentSyncCommitteeRoot = nextSyncCommitteeRoot;\\n            currentSyncCommitteePoseidonRoot = nextSyncCommitteePoseidonRoot;\\n            nextSyncCommitteeRoot = update.nextSyncCommitteeRoot;\\n            nextSyncCommitteePoseidonRoot = update.nextSyncCommitteePoseidonRoot;\\n            emit SyncCommitteeUpdated(updateFinalizedPeriod + 1, nextSyncCommitteeRoot, nextSyncCommitteePoseidonRoot);\\n        }\\n        if (update.finalizedHeader.beacon.slot > finalizedHeader.slot) {\\n            finalizedHeader = update.finalizedHeader.beacon;\\n            if (update.finalizedHeader.executionStateRoot != bytes32(0)) {\\n                finalizedExecutionStateRoot = update.finalizedHeader.executionStateRoot;\\n                finalizedExecutionStateRootSlot = update.finalizedHeader.beacon.slot;\\n            }\\n            emit HeaderUpdated(\\n                update.finalizedHeader.beacon.slot,\\n                update.finalizedHeader.beacon.stateRoot,\\n                update.finalizedHeader.executionStateRoot,\\n                true\\n            );\\n        }\\n    }\\n\\n    /*\\n     * https://github.com/ethereum/consensus-specs/blob/dev/specs/altair/light-client/sync-protocol.md#is_better_update\\n     */\\n    function isBetterUpdate(\\n        LightClientUpdate memory newUpdate,\\n        LightClientUpdate memory oldUpdate\\n    ) private pure returns (bool) {\\n        // Old update doesn't exist\\n        if (oldUpdate.syncAggregate.participation == 0) {\\n            return newUpdate.syncAggregate.participation > 0;\\n        }\\n\\n        // Compare supermajority (> 2/3) sync committee participation\\n        bool newHasSupermajority = hasSupermajority(newUpdate.syncAggregate.participation);\\n        bool oldHasSupermajority = hasSupermajority(oldUpdate.syncAggregate.participation);\\n        if (newHasSupermajority != oldHasSupermajority) {\\n            // the new update is a better one if new has supermajority but old doesn't\\n            return newHasSupermajority && !oldHasSupermajority;\\n        }\\n        if (!newHasSupermajority && newUpdate.syncAggregate.participation != oldUpdate.syncAggregate.participation) {\\n            // a better update is the one with higher participation when both new and old doesn't have supermajority\\n            return newUpdate.syncAggregate.participation > oldUpdate.syncAggregate.participation;\\n        }\\n\\n        // Compare presence of relevant sync committee\\n        bool newHasSyncCommittee = hasRelavantSyncCommittee(newUpdate);\\n        bool oldHasSyncCommittee = hasRelavantSyncCommittee(oldUpdate);\\n        if (newHasSyncCommittee != oldHasSyncCommittee) {\\n            return newHasSyncCommittee;\\n        }\\n\\n        // Compare indication of any fin\\n        bool newHasFinality = hasFinalityProof(newUpdate);\\n        bool oldHasFinality = hasFinalityProof(oldUpdate);\\n        if (newHasFinality != oldHasFinality) {\\n            return newHasFinality;\\n        }\\n\\n        // Compare sync committee fin\\n        if (newHasFinality) {\\n            bool newHasCommitteeFinality = computeSyncCommitteePeriodAtSlot(newUpdate.finalizedHeader.beacon.slot) ==\\n                computeSyncCommitteePeriodAtSlot(newUpdate.attestedHeader.beacon.slot);\\n            bool oldHasCommitteeFinality = computeSyncCommitteePeriodAtSlot(oldUpdate.finalizedHeader.beacon.slot) ==\\n                computeSyncCommitteePeriodAtSlot(oldUpdate.attestedHeader.beacon.slot);\\n            if (newHasCommitteeFinality != oldHasCommitteeFinality) {\\n                return newHasCommitteeFinality;\\n            }\\n        }\\n\\n        // Tiebreaker 1: Sync committee participation beyond supermajority\\n        if (newUpdate.syncAggregate.participation != oldUpdate.syncAggregate.participation) {\\n            return newUpdate.syncAggregate.participation > oldUpdate.syncAggregate.participation;\\n        }\\n\\n        // Tiebreaker 2: Prefer older data (fewer changes to best)\\n        if (newUpdate.attestedHeader.beacon.slot != oldUpdate.attestedHeader.beacon.slot) {\\n            return newUpdate.attestedHeader.beacon.slot < oldUpdate.attestedHeader.beacon.slot;\\n        }\\n\\n        return newUpdate.signatureSlot < oldUpdate.signatureSlot;\\n    }\\n\\n    function hasRelavantSyncCommittee(LightClientUpdate memory update) private pure returns (bool) {\\n        return\\n            hasNextSyncCommitteeProof(update) &&\\n            computeSyncCommitteePeriodAtSlot(update.attestedHeader.beacon.slot) ==\\n            computeSyncCommitteePeriodAtSlot(update.signatureSlot);\\n    }\\n\\n    function hasNextSyncCommitteeProof(LightClientUpdate memory update) private pure returns (bool) {\\n        return update.nextSyncCommitteeBranch.length > 0;\\n    }\\n\\n    function hasFinalityProof(LightClientUpdate memory update) private pure returns (bool) {\\n        return update.finalityBranch.length > 0;\\n    }\\n\\n    function hasFinalizedExecutionProof(LightClientUpdate memory update) private pure returns (bool) {\\n        return update.finalizedHeader.executionStateRootBranch.length > 0;\\n    }\\n\\n    function hasSupermajority(uint64 participation) private pure returns (bool) {\\n        return participation * 3 >= SYNC_COMMITTEE_SIZE * 2;\\n    }\\n\\n    function isEmptyHeader(HeaderWithExecution memory header) private pure returns (bool) {\\n        return header.beacon.stateRoot == bytes32(0);\\n    }\\n\\n    function currentSlot() private view returns (uint64) {\\n        return uint64((block.timestamp - GENESIS_TIME) / SLOT_LENGTH_SECONDS);\\n    }\\n\\n    function computeForkVersion(uint64 epoch) private view returns (bytes4) {\\n        for (uint256 i = forkVersions.length - 1; i >= 0; i--) {\\n            if (epoch >= forkEpochs[i]) {\\n                return forkVersions[i];\\n            }\\n        }\\n        revert(\\\"fork versions not set\\\");\\n    }\\n\\n    function computeSyncCommitteePeriodAtSlot(uint64 slot) private pure returns (uint64) {\\n        return computeSyncCommitteePeriod(computeEpochAtSlot(slot));\\n    }\\n\\n    function computeEpochAtSlot(uint64 slot) private pure returns (uint64) {\\n        return slot / SLOTS_PER_EPOCH;\\n    }\\n\\n    function computeSyncCommitteePeriod(uint64 epoch) private pure returns (uint64) {\\n        return epoch / EPOCHS_PER_SYNC_COMMITTEE_PERIOD;\\n    }\\n\\n    /**\\n     * https://github.com/ethereum/consensus-specs/blob/dev/specs/phase0/beacon-chain.md#compute_domain\\n     */\\n    function computeDomain(bytes4 forkVersion) public view returns (bytes32) {\\n        return DOMAIN_SYNC_COMMITTEE | (sha256(abi.encode(forkVersion, GENESIS_VALIDATOR_ROOT)) >> 32);\\n    }\\n\\n    // computeDomain(forkVersion, genesisValidatorsRoot)\\n    function computeSigningRoot(BeaconBlockHeader memory header, bytes32 domain) public pure returns (bytes32) {\\n        return sha256(bytes.concat(SSZ.hashTreeRoot(header), domain));\\n    }\\n}\\n\",\"keccak256\":\"0xca467cdb64660ae2375ee798cd23e198824601cc6d2665036570b4de5101456a\",\"license\":\"Unlicensed\"},\"contracts/light-client/IZkVerifier.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicensed\\npragma solidity 0.8.18;\\n\\nimport \\\"./Types.sol\\\";\\n\\ninterface IZkVerifier {\\n    function verifySignatureProof(\\n        bytes32 signingRoot,\\n        bytes32 syncCommitteePoseidonRoot,\\n        uint256 participation,\\n        uint256 commitment,\\n        Proof memory p\\n    ) external view returns (bool);\\n\\n    function verifySyncCommitteeRootMappingProof(\\n        bytes32 sszRoot,\\n        bytes32 poseidonRoot,\\n        Proof memory p\\n    ) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x522c2852d7882fa162e2986ee5c5c064c6434f518550f4c5dccb221400d15ac4\",\"license\":\"Unlicensed\"},\"contracts/light-client/LightClientStore.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicensed\\npragma solidity 0.8.18;\\n\\nimport \\\"./Types.sol\\\";\\nimport \\\"./IZkVerifier.sol\\\";\\n\\nabstract contract LightClientStore {\\n    // beacon chain genesis information\\n    uint256 immutable GENESIS_TIME;\\n    bytes32 immutable GENESIS_VALIDATOR_ROOT;\\n\\n    // light client store\\n    BeaconBlockHeader public finalizedHeader;\\n    bytes32 public finalizedExecutionStateRoot;\\n    uint64 public finalizedExecutionStateRootSlot;\\n\\n    bytes32 public currentSyncCommitteeRoot;\\n    bytes32 public currentSyncCommitteePoseidonRoot;\\n    bytes32 public nextSyncCommitteeRoot;\\n    bytes32 public nextSyncCommitteePoseidonRoot;\\n\\n    LightClientUpdate public bestValidUpdate;\\n\\n    // fork versions\\n    uint64[] public forkEpochs;\\n    bytes4[] public forkVersions;\\n\\n    // zk verifier\\n    IZkVerifier public zkVerifier; // contract too big. need to move this one out\\n\\n    constructor(\\n        uint256 genesisTime,\\n        bytes32 genesisValidatorsRoot,\\n        uint64[] memory _forkEpochs,\\n        bytes4[] memory _forkVersions,\\n        BeaconBlockHeader memory _finalizedHeader,\\n        bytes32 syncCommitteeRoot,\\n        bytes32 syncCommitteePoseidonRoot,\\n        address _zkVerifier\\n    ) {\\n        GENESIS_TIME = genesisTime;\\n        GENESIS_VALIDATOR_ROOT = genesisValidatorsRoot;\\n        forkEpochs = _forkEpochs;\\n        forkVersions = _forkVersions;\\n        finalizedHeader = _finalizedHeader;\\n        currentSyncCommitteeRoot = syncCommitteeRoot;\\n        currentSyncCommitteePoseidonRoot = syncCommitteePoseidonRoot;\\n        zkVerifier = IZkVerifier(_zkVerifier);\\n    }\\n}\\n\",\"keccak256\":\"0x10ea0eafe480deded0751e436a31086d32cf31ea6d4f4140ced2667e2ef6eb4f\",\"license\":\"Unlicensed\"},\"contracts/light-client/SSZ.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicensed\\npragma solidity 0.8.18;\\n\\nimport \\\"./Types.sol\\\";\\n\\nlibrary SSZ {\\n    function isValidMerkleBranch(\\n        bytes32 leaf,\\n        bytes32[] memory branch,\\n        uint256 index,\\n        bytes32 root\\n    ) internal pure returns (bool) {\\n        bytes32 restoredMerkleRoot = restoreMerkleRoot(leaf, branch, index);\\n        return root == restoredMerkleRoot;\\n    }\\n\\n    function restoreMerkleRoot(bytes32 leaf, bytes32[] memory branch, uint256 index) internal pure returns (bytes32) {\\n        bytes32 value = leaf;\\n        for (uint256 i = 0; i < branch.length; i++) {\\n            if ((index / (2 ** i)) % 2 == 1) {\\n                value = sha256(bytes.concat(branch[i], value));\\n            } else {\\n                value = sha256(bytes.concat(value, branch[i]));\\n            }\\n        }\\n        return value;\\n    }\\n\\n    function hashTreeRoot(BeaconBlockHeader memory header) internal pure returns (bytes32) {\\n        bytes32 left = sha256(\\n            bytes.concat(\\n                sha256(bytes.concat(toLittleEndian(header.slot), toLittleEndian(header.proposerIndex))),\\n                sha256(bytes.concat(header.parentRoot, header.stateRoot))\\n            )\\n        );\\n        bytes32 right = sha256(\\n            bytes.concat(\\n                sha256(bytes.concat(header.bodyRoot, bytes32(0))),\\n                sha256(bytes.concat(bytes32(0), bytes32(0)))\\n            )\\n        );\\n        return sha256(bytes.concat(left, right));\\n    }\\n\\n    function toLittleEndian(uint256 x) internal pure returns (bytes32) {\\n        bytes32 res;\\n        for (uint256 i = 0; i < 32; i++) {\\n            res = (res << 8) | bytes32(x & 0xff);\\n            x >>= 8;\\n        }\\n        return res;\\n    }\\n}\\n\",\"keccak256\":\"0xabd3811f2c3a25020cb2b40a894bdab66c982a017c144427002a1a988682918b\",\"license\":\"Unlicensed\"},\"contracts/light-client/Types.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicensed\\npragma solidity 0.8.18;\\n\\nstruct LightClientUpdate {\\n    // Header attested to by the sync committee\\n    HeaderWithExecution attestedHeader;\\n    HeaderWithExecution finalizedHeader;\\n    // merkle branch from finalized beacon header root to attestedHeader.stateRoot\\n    bytes32[] finalityBranch;\\n    bytes32 nextSyncCommitteeRoot;\\n    bytes32[] nextSyncCommitteeBranch;\\n    bytes32 nextSyncCommitteePoseidonRoot;\\n    Proof nextSyncCommitteeRootMappingProof;\\n    // Sync committee aggregate signature participation & zk proof\\n    SyncAggregate syncAggregate;\\n    // Slot at which the aggregate signature was created (untrusted)\\n    uint64 signatureSlot;\\n}\\n\\nstruct HeaderWithExecution {\\n    BeaconBlockHeader beacon;\\n    bytes32 executionStateRoot;\\n    // merkle branch from execution state root to beacon block body root\\n    // note: this is a concatenation of the light client spec's \\\"execution_branch\\\" which is from\\n    // execution payload root to beacon block body root\\n    bytes32[] executionStateRootBranch;\\n}\\n\\nstruct BeaconBlockHeader {\\n    uint64 slot;\\n    uint64 proposerIndex;\\n    bytes32 parentRoot;\\n    bytes32 stateRoot;\\n    bytes32 bodyRoot;\\n}\\n\\nstruct SyncAggregate {\\n    uint64 participation;\\n    bytes32 poseidonRoot;\\n    uint256 commitment;\\n    Proof proof;\\n}\\n\\nstruct Proof {\\n    uint256[2] a;\\n    uint256[2][2] b;\\n    uint256[2] c;\\n    uint256[2] commitment;\\n}\\n\",\"keccak256\":\"0x1e1d8cde269024e34820f6244ec4281d12139904cc7fb522cc835c9c13efd9c2\",\"license\":\"Unlicensed\"}},\"version\":1}",
  "bytecode": "0x60c06040523480156200001157600080fd5b506040516200448b3803806200448b833981016040819052620000349162000495565b608088905260a0879052855188908890889088908890889088908890620000639060329060208901906200016e565b508451620000799060339060208801906200022d565b5083516000805460208701516001600160401b0390811668010000000000000000026001600160801b031990921693169290921791909117905560408401516001556060840151600255608090930151600355600691909155600755603480546001600160a01b039092166001600160a01b0319909216919091179055506200010e9250620001089150503390565b6200011c565b5050505050505050620005b7565b603580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054828255906000526020600020906003016004900481019282156200021b5791602002820160005b83821115620001e457835183826101000a8154816001600160401b0302191690836001600160401b03160217905550926020019260080160208160070104928301926001030262000198565b8015620002195782816101000a8154906001600160401b030219169055600801602081600701049283019260010302620001e4565b505b5062000229929150620002cc565b5090565b828054828255906000526020600020906007016008900481019282156200021b5791602002820160005b838211156200029a57835183826101000a81548163ffffffff021916908360e01c0217905550926020019260040160208160030104928301926001030262000257565b8015620002195782816101000a81549063ffffffff02191690556004016020816003010492830192600103026200029a565b5b80821115620002295760008155600101620002cd565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715620003245762000324620002e3565b604052919050565b60006001600160401b03821115620003485762000348620002e3565b5060051b60200190565b80516001600160401b03811681146200036a57600080fd5b919050565b600082601f8301126200038157600080fd5b815160206200039a62000394836200032c565b620002f9565b82815260059290921b84018101918181019086841115620003ba57600080fd5b8286015b84811015620003ef5780516001600160e01b031981168114620003e15760008081fd5b8352918301918301620003be565b509695505050505050565b600060a082840312156200040d57600080fd5b60405160a081016001600160401b0381118282101715620004325762000432620002e3565b604052905080620004438362000352565b8152620004536020840162000352565b60208201526040830151604082015260608301516060820152608083015160808201525092915050565b80516001600160a01b03811681146200036a57600080fd5b600080600080600080600080610180898b031215620004b357600080fd5b88516020808b015160408c0151929a509850906001600160401b0380821115620004dc57600080fd5b818c0191508c601f830112620004f157600080fd5b81516200050262000394826200032c565b81815260059190911b8301840190848101908f8311156200052257600080fd5b938501935b828510156200054b576200053b8562000352565b8252938501939085019062000527565b60608f0151909b5094505050808311156200056557600080fd5b5050620005758b828c016200036f565b955050620005878a60808b01620003fa565b935061012089015192506101408901519150620005a86101608a016200047d565b90509295985092959890939650565b60805160a051613eae620005dd6000396000610c7d0152600061219a0152613eae6000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c8063aae3913b116100d8578063c51904361161008c578063e153d79911610066578063e153d7991461034f578063e1861b081461037d578063f2fde38b1461038657600080fd5b8063c519043614610320578063d6df096d14610329578063da8c9e8c1461033c57600080fd5b8063ba67ee48116100bd578063ba67ee48146102c6578063baa94ea2146102e1578063bcbaf7701461030d57600080fd5b8063aae3913b146102a0578063ab556e9f146102b357600080fd5b8063751f7f151161012f5780639863282d116101145780639863282d14610231578063a1a9ad551461028f578063a4059e071461029757600080fd5b8063751f7f15146101f95780638da5cb5b1461020c57600080fd5b806365e700de1161016057806365e700de146101cf57806367b49cc7146101e6578063715018a6146101ef57600080fd5b8063104202ae1461017c57806312420766146101ac575b600080fd5b60055461018f906001600160401b031681565b6040516001600160401b0390911681526020015b60405180910390f35b600454600554604080519283526001600160401b039091166020830152016101a3565b6101d860075481565b6040519081526020016101a3565b6101d860085481565b6101f7610399565b005b6101d861020736600461355f565b610404565b6035546001600160a01b03165b6040516001600160a01b0390911681526020016101a3565b60005460015460025460035461025c936001600160401b0380821694600160401b9092041692909185565b604080516001600160401b039687168152959094166020860152928401919091526060830152608082015260a0016101a3565b6101f7610488565b6101d860065481565b6101d86102ae3660046135a2565b610c74565b6101f76102c13660046135bd565b610d2a565b6102ce610eeb565b6040516101a3979695949392919061371c565b6102f46102ef3660046137b2565b6112dc565b6040516001600160e01b031990911681526020016101a3565b61018f61031b3660046137b2565b611313565b6101d860045481565b603454610219906001600160a01b031681565b6101f761034a366004613a29565b611350565b600054600654600854604080516001600160401b0390941684526020840192909252908201526060016101a3565b6101d860095481565b6101f7610394366004613b4e565b611ccf565b6035546001600160a01b031633146103f85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6104026000611db1565b565b6000600261041184611e1b565b604080516020810192909252810184905260600160408051601f198184030181529082905261043f91613b7e565b602060405180830381855afa15801561045c573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061047f9190613bad565b90505b92915050565b6035546001600160a01b031633146104e25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103ef565b6000546104fc9062015180906001600160401b0316613bdc565b610504612191565b6001600160401b03161161055a5760405162461bcd60e51b815260206004820152601260248201527f74696d656f7574206e6f7420706173736564000000000000000000000000000060448201526064016103ef565b600a546001600160401b03166105b25760405162461bcd60e51b815260206004820152601460248201527f6e6f20626573742076616c69642075706461746500000000000000000000000060448201526064016103ef565b6000546010546001600160401b0391821691161161062c57600a805460108054600160401b8084046001600160401b039081169091026001600160801b0319909216931692909217919091178155600b54601155600c54601255600d54601355600e54601455600f8054610628916015916132f9565b5050505b6040805161022081018252600a80546001600160401b038082166101808501908152600160401b909204166101a0840152600b546101c0840152600c546101e0840152600d546102008401526101208301908152600e54610140840152600f80548551602082810282018101909752818152610af8968694938693610160870193928301828280156106dd57602002820191906000526020600020905b8154815260200190600101908083116106c9575b50505091909252505050815260408051610100810182526006840180546001600160401b0380821660608501908152600160401b909204166080840152600786015460a0840152600886015460c0840152600986015460e08401528252600a850154602083810191909152600b8601805485518184028101840187528181529683019694959394938601939283018282801561079857602002820191906000526020600020905b815481526020019060010190808311610784575b5050505050815250508152602001600c82018054806020026020016040519081016040528092919081815260200182805480156107f457602002820191906000526020600020905b8154815260200190600101908083116107e0575b50505050508152602001600d8201548152602001600e820180548060200260200160405190810160405280929190818152602001828054801561085657602002820191906000526020600020905b815481526020019060010190808311610842575b5050509183525050600f82015460208201526040805160c0810182529101906010830181608081018260028282826020028201915b81548152602001906001019080831161088b575050505050815260200160028201600280602002604051908101604052809291906000905b8282101561090957604080518082019182905290600284810287019182845b8154815260200190600101908083116108e2575050505050815260200190600101906108c3565b50505090825250604080518082019182905260209092019190600684019060029082845b81548152602001906001019080831161092d575050509183525050604080518082019182905260209092019190600884019060029082845b815481526020019060010190808311610965575050509190925250505081526040805160808082018352601a850180546001600160401b03168352601b860154602084810191909152601c87015484860152845160c081019095529094019391926060840191601d870190829081018260028282826020028201915b8154815260200190600101908083116109e1575050505050815260200160028201600280602002604051908101604052809291906000905b82821015610a5f57604080518082019182905290600284810287019182845b815481526020019060010190808311610a3857505050505081526020019060010190610a19565b50505090825250604080518082019182905260209092019190600684019060029082845b815481526020019060010190808311610a83575050509183525050604080518082019182905260209092019190600884019060029082845b815481526020019060010190808311610abb57505050919092525050509052508152602791909101546001600160401b03166020909101526121ce565b600a80546001600160801b03191681556000600b819055600c819055600d819055600e8190558181610b2b600f82613349565b50506006820180546001600160801b03191681556000600784018190556008840181905560098401819055600a8401819055610b6a600b850182613349565b50610b7b9050600c83016000613349565b600d820160009055600e82016000610b939190613349565b6000600f8301819055601083018181556011840182905590610bcd6002830160008082556001820181905560028201819055600390910155565b600060068301819055600783015560006008830181905560098301555050601a8201805467ffffffffffffffff191681556000601b8401819055601c8401819055601d8401818155601e850182905581610c3f6002830160008082556001820181905560028201819055600390910155565b506000600682018190556007820181905560088201819055600990910155505050602701805467ffffffffffffffff19169055565b600060206002837f0000000000000000000000000000000000000000000000000000000000000000604051602001610cc29291906001600160e01b0319929092168252602082015260400190565b60408051601f1981840301815290829052610cdc91613b7e565b602060405180830381855afa158015610cf9573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610d1c9190613bad565b600760f81b911c1792915050565b6035546001600160a01b03163314610d845760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103ef565b6001600160e01b03198116610ddb5760405162461bcd60e51b815260206004820152601060248201527f62616420666f726b2076657273696f6e0000000000000000000000000000000060448201526064016103ef565b60328054600181810190925560048082047f11df491316f14931039edfd4f8964c9a443b862f02d4c7611d18c2bc4e6ff6970180546001600160401b0380881660086003909616860261010090810a9182029290910219909216179091556033805494850181556000529183047f82a75bdeeae8604d839476ae9efd8b0e15aa447e21bfd7f41283bb54e22c9a8201805460e086901c600790951690920290920a92830263ffffffff90930219169190911790556040517f3d992c45d9456d8ebe181b6a66a3721421393afaa297791373e7569c1abcc8af90610edf90849084906001600160401b039290921682526001600160e01b031916602082015260400190565b60405180910390a15050565b6040805161010081018252600a80546001600160401b0380821660608501908152600160401b909204166080840152600b5460a0840152600c5460c0840152600d5460e08401528252600e54602080840191909152600f80548551818402810184018752818152939586949086019390929190830182828015610f8d57602002820191906000526020600020905b815481526020019060010190808311610f79575b50505091909252505060408051610100810182526006850180546001600160401b0380821660608501908152600160401b909204166080840152600787015460a0840152600887015460c0840152600987015460e08401528252600a860154602080840191909152600b870180548551818402810184018752818152979897949650929486019392909183018282801561104657602002820191906000526020600020905b815481526020019060010190808311611032575b50505091909252505050600d820154600f8301546040805160c08101909152929391929091906010820181608081018260028282826020028201915b815481526020019060010190808311611082575050505050815260200160028201600280602002604051908101604052809291906000905b8282101561110057604080518082019182905290600284810287019182845b8154815260200190600101908083116110d9575050505050815260200190600101906110ba565b50505090825250604080518082019182905260209092019190600684019060029082845b815481526020019060010190808311611124575050509183525050604080518082019182905260209092019190600884019060029082845b81548152602001906001019080831161115c575050509190925250506040805160808082018352601a860180546001600160401b03168352601b8701546020840152601c87015483850152835160c081019485905295969592945092606085019291601d8701918391820190839060029082845b8154815260200190600101908083116111d0575050505050815260200160028201600280602002604051908101604052809291906000905b8282101561124e57604080518082019182905290600284810287019182845b81548152602001906001019080831161122757505050505081526020019060010190611208565b50505090825250604080518082019182905260209092019190600684019060029082845b815481526020019060010190808311611272575050509183525050604080518082019182905260209092019190600884019060029082845b8154815260200190600101908083116112aa57505050919092525050509052506027909101546001600160401b031687565b603381815481106112ec57600080fd5b9060005260206000209060089182820401919006600402915054906101000a900460e01b81565b6032818154811061132357600080fd5b9060005260206000209060049182820401919006600802915054906101000a90046001600160401b031681565b61135981612481565b6040805161022081018252600a80546001600160401b038082166101808501908152600160401b909204166101a0840152600b546101c0840152600c546101e0840152600d546102008401526101208301908152600e54610140840152600f8054855160208281028201810190975281815261182d96889695948694909386936101608701939092919083018282801561141257602002820191906000526020600020905b8154815260200190600101908083116113fe575b50505091909252505050815260408051610100810182526006840180546001600160401b0380821660608501908152600160401b909204166080840152600786015460a0840152600886015460c0840152600986015460e08401528252600a850154602083810191909152600b860180548551818402810184018752818152968301969495939493860193928301828280156114cd57602002820191906000526020600020905b8154815260200190600101908083116114b9575b5050505050815250508152602001600c820180548060200260200160405190810160405280929190818152602001828054801561152957602002820191906000526020600020905b815481526020019060010190808311611515575b50505050508152602001600d8201548152602001600e820180548060200260200160405190810160405280929190818152602001828054801561158b57602002820191906000526020600020905b815481526020019060010190808311611577575b5050509183525050600f82015460208201526040805160c0810182529101906010830181608081018260028282826020028201915b8154815260200190600101908083116115c0575050505050815260200160028201600280602002604051908101604052809291906000905b8282101561163e57604080518082019182905290600284810287019182845b815481526020019060010190808311611617575050505050815260200190600101906115f8565b50505090825250604080518082019182905260209092019190600684019060029082845b815481526020019060010190808311611662575050509183525050604080518082019182905260209092019190600884019060029082845b81548152602001906001019080831161169a575050509190925250505081526040805160808082018352601a850180546001600160401b03168352601b860154602084810191909152601c87015484860152845160c081019095529094019391926060840191601d870190829081018260028282826020028201915b815481526020019060010190808311611716575050505050815260200160028201600280602002604051908101604052809291906000905b8282101561179457604080518082019182905290600284810287019182845b81548152602001906001019080831161176d5750505050508152602001906001019061174e565b50505090825250604080518082019182905260209092019190600684019060029082845b8154815260200190600101908083116117b8575050509183525050604080518082019182905260209092019190600884019060029082845b8154815260200190600101908083116117f057505050919092525050509052508152602791909101546001600160401b0316602090910152612d40565b15611a9f57805180518051600a80546020808501516001600160401b03908116600160401b026001600160801b0319909316941693909317178155604080840151600b556060840151600c55608090930151600d5581840151600e5591830151805185949284926118a592600f929190910190613367565b50505060208281015180518051600685018054838601516001600160401b03908116600160401b026001600160801b0319909216931692909217919091178155604080830151600787015560608301516008870155608090920151600986015582840151600a8601559082015180519293919261192892600b8701920190613367565b5050506040820151805161194691600c840191602090910190613367565b506060820151600d8201556080820151805161196c91600e840191602090910190613367565b5060a0820151600f82015560c08201518051601083019061199090829060026133a2565b5060208201516119a690600280840191906133cf565b5060408201516119bc90600683019060026133a2565b5060608201516119d290600883019060026133a2565b50505060e08201518051601a8301805467ffffffffffffffff19166001600160401b039092169190911781556020820151601b8401556040820151601c84015560608201518051601d850190611a2b90829060026133a2565b506020820151611a4190600280840191906133cf565b506040820151611a5790600683019060026133a2565b506060820151611a6d90600883019060026133a2565b505050506101009290920151602791909101805467ffffffffffffffff19166001600160401b03909216919091179055505b6000611aaf826080015151151590565b8015611abf575060408201515115155b8015611afc575081515151611ad390612fc7565b6001600160401b0316611af183602001516000015160000151612fc7565b6001600160401b0316145b8015611b085750600854155b9050611b1b8260e0015160000151612fda565b8015611b425750600054602083015151516001600160401b0391821691161180611b425750805b15611ccb57611b50826121ce565b600a80546001600160801b03191681556000600b819055600c819055600d819055600e8190558181611b83600f82613349565b50506006820180546001600160801b03191681556000600784018190556008840181905560098401819055600a8401819055611bc2600b850182613349565b50611bd39050600c83016000613349565b600d820160009055600e82016000611beb9190613349565b6000600f8301819055601083018181556011840182905590611c256002830160008082556001820181905560028201819055600390910155565b600060068301819055600783015560006008830181905560098301555050601a8201805467ffffffffffffffff191681556000601b8401819055601c8401819055601d8401818155601e850182905581611c976002830160008082556001820181905560028201819055600390910155565b506000600682018190556007820181905560088201819055600990910155505050602701805467ffffffffffffffff191690555b5050565b6035546001600160a01b03163314611d295760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103ef565b6001600160a01b038116611da55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016103ef565b611dae81611db1565b50565b603580546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080600280611e3785600001516001600160401b0316613005565b611e4d86602001516001600160401b0316613005565b60408051602081019390935282015260600160408051601f1981840301815290829052611e7991613b7e565b602060405180830381855afa158015611e96573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190611eb99190613bad565b600285604001518660600151604051602001611edf929190918252602082015260400190565b60408051601f1981840301815290829052611ef991613b7e565b602060405180830381855afa158015611f16573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190611f399190613bad565b60408051602081019390935282015260600160408051601f1981840301815290829052611f6591613b7e565b602060405180830381855afa158015611f82573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190611fa59190613bad565b9050600060028085608001516000801b604051602001611fcf929190918252602082015260400190565b60408051601f1981840301815290829052611fe991613b7e565b602060405180830381855afa158015612006573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906120299190613bad565b604051600290612049906000908190602001918252602082015260400190565b60408051601f198184030181529082905261206391613b7e565b602060405180830381855afa158015612080573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906120a39190613bad565b60408051602081019390935282015260600160408051601f19818403018152908290526120cf91613b7e565b602060405180830381855afa1580156120ec573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061210f9190613bad565b90506002828260405160200161212f929190918252602082015260400190565b60408051601f198184030181529082905261214991613b7e565b602060405180830381855afa158015612166573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906121899190613bad565b949350505050565b6000600c6121bf7f000000000000000000000000000000000000000000000000000000000000000042613bef565b6121c99190613c18565b905090565b600080546121e4906001600160401b0316612fc7565b602083015151519091506000906121fa90612fc7565b6008549091506122d457816001600160401b0316816001600160401b0316146122655760405162461bcd60e51b815260206004820152600f60248201527f6d69736d6174636820706572696f64000000000000000000000000000000000060448201526064016103ef565b606083015160085560a08301516009557fdc7ba15c782b181b9d54a996db4ab8a32182bff2bfb09e4aca8ed9ea9e5380c76122a1826001613c2c565b600854600954604080516001600160401b03909416845260208401929092529082015260600160405180910390a161236f565b6122df826001613c2c565b6001600160401b0316816001600160401b03160361236f576008805460065560098054600755606085015190915560a084015190557fdc7ba15c782b181b9d54a996db4ab8a32182bff2bfb09e4aca8ed9ea9e5380c7612340826001613c2c565b600854600954604080516001600160401b03909416845260208401929092529082015260600160405180910390a15b600054602084015151516001600160401b039182169116111561247c576020808401518051805160008054838601516001600160401b03908116600160401b026001600160801b03199092169316929092179190911790556040810151600155606081015160025560800151600355015115612415576020838101519081015160045551516005805467ffffffffffffffff19166001600160401b039092169190911790555b6020838101518051805160609182015192840151604080516001600160401b03909316835294820193909352928301919091526001908201527f8eba85cf1bad9a86550001d8f2f6d6f2d892aff5ef507b89e03f785e066f93a89060800160405180910390a15b505050565b60018160e00151600001516001600160401b0316116124e25760405162461bcd60e51b815260206004820152601860248201527f6e6f7420656e6f7567682070617274696369706174696f6e000000000000000060448201526064016103ef565b805151516001600160401b03166124f7612191565b6001600160401b0316118015612522575060208101515151815151516001600160401b039182169116115b61256e5760405162461bcd60e51b815260206004820152600860248201527f62616420736c6f7400000000000000000000000000000000000000000000000060448201526064016103ef565b60008054612584906001600160401b0316612fc7565b6020830151515190915060009061259a90612fc7565b9050816001600160401b0316816001600160401b031614806125d757506125c2826001613c2c565b6001600160401b0316816001600160401b0316145b6125e057600080fd5b825151516000906125f090612fc7565b60085490915060009015801561260a575060808501515115155b80156126275750836001600160401b0316826001600160401b0316145b600054865151519192506001600160401b03908116911611806126475750805b61265057600080fd5b6040850151516126b65760208501515160600151156126b15760405162461bcd60e51b815260206004820152600c60248201527f6e6f2066696e2070726f6f66000000000000000000000000000000000000000060448201526064016103ef565b61279f565b602085015151516001600160401b03166000036127245760208501515160600151156126b15760405162461bcd60e51b815260206004820152601e60248201527f67656e65736973206865616465722073686f756c6420626520656d707479000060448201526064016103ef565b600061274e61273a876020015160000151611e1b565b60408801518851516060015160699061303e565b90508061279d5760405162461bcd60e51b815260206004820152600d60248201527f6261642066696e2070726f6f660000000000000000000000000000000000000060448201526064016103ef565b505b60208501516040015151612807576020808601510151156128025760405162461bcd60e51b815260206004820152601160248201527f6e6f20657865632066696e2070726f6f6600000000000000000000000000000060448201526064016103ef565b6128d0565b6040850151516128595760405162461bcd60e51b815260206004820152601160248201527f6e6f20657865632066696e2070726f6f6600000000000000000000000000000060448201526064016103ef565b60208086015190810151604082015191516080015160009261287f92916101929061303e565b9050806128ce5760405162461bcd60e51b815260206004820152601260248201527f62616420657865632066696e2070726f6f66000000000000000000000000000060448201526064016103ef565b505b60808501515161293f5760608501511580156128ee575060a0850151155b61293a5760405162461bcd60e51b815260206004820152601c60248201527f6e6f206e6578742073796e6320636f6d6d69747465652070726f6f660000000060448201526064016103ef565b612b29565b836001600160401b0316826001600160401b0316148015612961575060085415155b156129bb576008548560600151146129bb5760405162461bcd60e51b815260206004820152601760248201527f626164206e6578742073796e6320636f6d6d697474656500000000000000000060448201526064016103ef565b60006129de8660600151876080015160378960000151600001516060015161303e565b905080612a2d5760405162461bcd60e51b815260206004820152601d60248201527f626164206e6578742073796e6320636f6d6d69747465652070726f6f6600000060448201526064016103ef565b603454606087015160a088015160c0890151604051637a53878160e01b81526000946001600160a01b031693637a53878193612a70939192909190600401613c4c565b602060405180830381865afa158015612a8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ab19190613c68565b905080612b265760405162461bcd60e51b815260206004820152602a60248201527f626164206e6578742073796e6320636f6d6d697474656520726f6f74206d617060448201527f70696e672070726f6f660000000000000000000000000000000000000000000060648201526084016103ef565b50505b6000612b41612b3c876101000151613058565b613065565b90506000612b4e82610c74565b875151909150600090612b619083610404565b90506000876001600160401b0316876001600160401b031603612be0578860e001516020015160075414612bd75760405162461bcd60e51b815260206004820152601160248201527f62616420706f736569646f6e20726f6f7400000000000000000000000000000060448201526064016103ef565b50600754612c61565b612beb886001613c2c565b6001600160401b0316876001600160401b031603612c61578860e001516020015160095414612c5c5760405162461bcd60e51b815260206004820152601160248201527f62616420706f736569646f6e20726f6f7400000000000000000000000000000060448201526064016103ef565b506009545b60345460e08a015180516040808301516060909301519051630291ab6d60e51b81526001600160a01b03909416936352356da093612ca89388938893919291600401613c8a565b602060405180830381865afa158015612cc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ce99190613c68565b612d355760405162461bcd60e51b815260206004820152601160248201527f62616420626c73207369672070726f6f6600000000000000000000000000000060448201526064016103ef565b505050505050505050565b60e0810151516000906001600160401b03168103612d6f575060e0820151516001600160401b03161515610482565b6000612d828460e0015160000151612fda565b90506000612d978460e0015160000151612fda565b905080151582151514612db857818015612daf575080155b92505050610482565b81158015612ddd575060e0808501515190860151516001600160401b03908116911614155b15612e045750505060e0808201515190830151516001600160401b03918216911611610482565b6000612e0f86613120565b90506000612e1c86613120565b905080151582151514612e3457509250610482915050565b6000612e44886040015151151590565b90506000612e56886040015151151590565b905080151582151514612e70575094506104829350505050565b8115612f0c5788515151600090612e8690612fc7565b6001600160401b0316612ea48b602001516000015160000151612fc7565b6001600160401b03161490506000612ec78a600001516000015160000151612fc7565b6001600160401b0316612ee58b602001516000015160000151612fc7565b6001600160401b03161490508115158114612f095750965061048295505050505050565b50505b60e08089015151908a0151516001600160401b03908116911614612f5c578760e00151600001516001600160401b03168960e00151600001516001600160401b0316119650505050505050610482565b87515151895151516001600160401b03908116911614612f9a57505085515151875151516001600160401b0391821691161094506104829350505050565b8761010001516001600160401b03168961010001516001600160401b031610965050505050505092915050565b6000610482612fd583613058565b61316f565b6000612fe96102006002613cc6565b612ff4836003613cdd565b6001600160401b0316101592915050565b60008060005b602081101561303757600884811c9460ff1692901b91909117908061302f81613d08565b91505061300b565b5092915050565b60008061304c86868661317d565b90921495945050505050565b6000610482602083613d21565b603354600090819061307990600190613bef565b90505b6032818154811061308f5761308f613d47565b90600052602060002090600491828204019190066008029054906101000a90046001600160401b03166001600160401b0316836001600160401b03161061310e57603381815481106130e3576130e3613d47565b90600052602060002090600891828204019190066004029054906101000a900460e01b915050919050565b8061311881613d5d565b91505061307c565b6000613130826080015151151590565b80156104825750613145826101000151612fc7565b825151516001600160401b03919091169061315f90612fc7565b6001600160401b03161492915050565b600061048261010083613d21565b600083815b84518110156132f05760026131978282613e58565b6131a19086613c18565b6131ab9190613e64565b60010361324a5760028582815181106131c6576131c6613d47565b6020026020010151836040516020016131e9929190918252602082015260400190565b60408051601f198184030181529082905261320391613b7e565b602060405180830381855afa158015613220573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906132439190613bad565b91506132de565b60028286838151811061325f5761325f613d47565b6020026020010151604051602001613281929190918252602082015260400190565b60408051601f198184030181529082905261329b91613b7e565b602060405180830381855afa1580156132b8573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906132db9190613bad565b91505b806132e881613d08565b915050613182565b50949350505050565b8280548282559060005260206000209081019282156133395760005260206000209182015b8281111561333957825482559160010191906001019061331e565b50613345929150613416565b5090565b5080546000825590600052602060002090810190611dae9190613416565b828054828255906000526020600020908101928215613339579160200282015b82811115613339578251825591602001919060010190613387565b82600281019282156133395791602002820182811115613339578251825591602001919060010190613387565b60048301918390821561340a579160200282015b8281111561340a5782516133fa90839060026133a2565b50916020019190600201906133e3565b5061334592915061342b565b5b808211156133455760008155600101613417565b80821115613345576000808255600182015560020161342b565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b038111828210171561347d5761347d613445565b60405290565b60405161012081016001600160401b038111828210171561347d5761347d613445565b604080519081016001600160401b038111828210171561347d5761347d613445565b80356001600160401b03811681146134df57600080fd5b919050565b600060a082840312156134f657600080fd5b60405160a081018181106001600160401b038211171561351857613518613445565b604052905080613527836134c8565b8152613535602084016134c8565b60208201526040830135604082015260608301356060820152608083013560808201525092915050565b60008060c0838503121561357257600080fd5b61357c84846134e4565b9460a0939093013593505050565b80356001600160e01b0319811681146134df57600080fd5b6000602082840312156135b457600080fd5b61047f8261358a565b600080604083850312156135d057600080fd5b6135d9836134c8565b91506135e76020840161358a565b90509250929050565b600060e0830182516001600160401b038082511686526020818184015116818801526040830151604088015260608301516060880152608083015160808801528086015160a08801526040860151925060e060c08801528391508251808552610100880192508184019450600093505b808410156136805784518352938101936001939093019291810191613660565b50909695505050505050565b8060005b60028110156136af578151845260209384019390910190600101613690565b50505050565b6136c082825161368c565b602080820151604080850160005b60028110156136f2576136e282855161368c565b92840192908201906001016136ce565b50508301519150613708905060c084018261368c565b50606081015161247c61010084018261368c565b60006103808083526137308184018b6135f0565b90508281036020840152613744818a6135f0565b91505086604083015285606083015261376060808301866136b5565b6001600160401b03808551166101c084015260208501516101e08401526040850151610200840152606085015161379b6102208501826136b5565b508084166103608401525098975050505050505050565b6000602082840312156137c457600080fd5b5035919050565b600082601f8301126137dc57600080fd5b813560206001600160401b03808311156137f8576137f8613445565b8260051b604051601f19603f8301168101818110848211171561381d5761381d613445565b60405293845285810183019383810192508785111561383b57600080fd5b83870191505b8482101561385a57813583529183019190830190613841565b979650505050505050565b600060e0828403121561387757600080fd5b604051606081016001600160401b03828210818311171561389a5761389a613445565b816040528293506138ab86866134e4565b835260a0850135602084015260c08501359150808211156138cb57600080fd5b506138d8858286016137cb565b6040830152505092915050565b600082601f8301126138f657600080fd5b6138fe6134a6565b80604084018581111561391057600080fd5b845b8181101561392a578035845260209384019301613912565b509095945050505050565b6000610140828403121561394857600080fd5b61395061345b565b905061395c83836138e5565b8152604083605f84011261396f57600080fd5b6139776134a6565b8060c085018681111561398957600080fd5b8386015b818110156139ae5761399f88826138e5565b8452602090930192840161398d565b508160208601526139bf87826138e5565b84860152505050506139d58361010084016138e5565b606082015292915050565b60006101a082840312156139f357600080fd5b6139fb61345b565b9050613a06826134c8565b815260208201356020820152604082013560408201526139d58360608401613935565b600060208284031215613a3b57600080fd5b81356001600160401b0380821115613a5257600080fd5b908301906103c08286031215613a6757600080fd5b613a6f613483565b823582811115613a7e57600080fd5b613a8a87828601613865565b825250602083013582811115613a9f57600080fd5b613aab87828601613865565b602083015250604083013582811115613ac357600080fd5b613acf878286016137cb565b60408301525060608301356060820152608083013582811115613af157600080fd5b613afd878286016137cb565b60808301525060a083013560a0820152613b1a8660c08501613935565b60c0820152613b2d8661020085016139e0565b60e0820152613b3f6103a084016134c8565b61010082015295945050505050565b600060208284031215613b6057600080fd5b81356001600160a01b0381168114613b7757600080fd5b9392505050565b6000825160005b81811015613b9f5760208186018101518583015201613b85565b506000920191825250919050565b600060208284031215613bbf57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561048257610482613bc6565b8181038181111561048257610482613bc6565b634e487b7160e01b600052601260045260246000fd5b600082613c2757613c27613c02565b500490565b6001600160401b0381811683821601908082111561303757613037613bc6565b83815260208101839052610180810161218960408301846136b5565b600060208284031215613c7a57600080fd5b81518015158114613b7757600080fd5b858152602081018590526001600160401b0384166040820152606081018390526101c08101613cbc60808301846136b5565b9695505050505050565b808202811582820484141761048257610482613bc6565b6001600160401b03818116838216028082169190828114613d0057613d00613bc6565b505092915050565b600060018201613d1a57613d1a613bc6565b5060010190565b60006001600160401b0380841680613d3b57613d3b613c02565b92169190910492915050565b634e487b7160e01b600052603260045260246000fd5b600081613d6c57613d6c613bc6565b506000190190565b600181815b80851115613daf578160001904821115613d9557613d95613bc6565b80851615613da257918102915b93841c9390800290613d79565b509250929050565b600082613dc657506001610482565b81613dd357506000610482565b8160018114613de95760028114613df357613e0f565b6001915050610482565b60ff841115613e0457613e04613bc6565b50506001821b610482565b5060208310610133831016604e8410600b8410161715613e32575081810a610482565b613e3c8383613d74565b8060001904821115613e5057613e50613bc6565b029392505050565b600061047f8383613db7565b600082613e7357613e73613c02565b50069056fea2646970667358221220295d044a70251b42f9ecc758a946427f2ca7480c37fb5801186d862e0c1ab75264736f6c63430008120033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "computeDomain(bytes4)": {
        "notice": "https://github.com/ethereum/consensus-specs/blob/dev/specs/phase0/beacon-chain.md#compute_domain"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1437,
        "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
        "label": "finalizedHeader",
        "offset": 0,
        "slot": "0",
        "type": "t_struct(BeaconBlockHeader)1798_storage"
      },
      {
        "astId": 1439,
        "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
        "label": "finalizedExecutionStateRoot",
        "offset": 0,
        "slot": "4",
        "type": "t_bytes32"
      },
      {
        "astId": 1441,
        "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
        "label": "finalizedExecutionStateRootSlot",
        "offset": 0,
        "slot": "5",
        "type": "t_uint64"
      },
      {
        "astId": 1443,
        "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
        "label": "currentSyncCommitteeRoot",
        "offset": 0,
        "slot": "6",
        "type": "t_bytes32"
      },
      {
        "astId": 1445,
        "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
        "label": "currentSyncCommitteePoseidonRoot",
        "offset": 0,
        "slot": "7",
        "type": "t_bytes32"
      },
      {
        "astId": 1447,
        "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
        "label": "nextSyncCommitteeRoot",
        "offset": 0,
        "slot": "8",
        "type": "t_bytes32"
      },
      {
        "astId": 1449,
        "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
        "label": "nextSyncCommitteePoseidonRoot",
        "offset": 0,
        "slot": "9",
        "type": "t_bytes32"
      },
      {
        "astId": 1452,
        "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
        "label": "bestValidUpdate",
        "offset": 0,
        "slot": "10",
        "type": "t_struct(LightClientUpdate)1778_storage"
      },
      {
        "astId": 1455,
        "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
        "label": "forkEpochs",
        "offset": 0,
        "slot": "50",
        "type": "t_array(t_uint64)dyn_storage"
      },
      {
        "astId": 1458,
        "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
        "label": "forkVersions",
        "offset": 0,
        "slot": "51",
        "type": "t_array(t_bytes4)dyn_storage"
      },
      {
        "astId": 1461,
        "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
        "label": "zkVerifier",
        "offset": 0,
        "slot": "52",
        "type": "t_contract(IZkVerifier)1426"
      },
      {
        "astId": 7,
        "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
        "label": "_owner",
        "offset": 0,
        "slot": "53",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_array(t_uint256)2_storage)2_storage": {
        "base": "t_array(t_uint256)2_storage",
        "encoding": "inplace",
        "label": "uint256[2][2]",
        "numberOfBytes": "128"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes4)dyn_storage": {
        "base": "t_bytes4",
        "encoding": "dynamic_array",
        "label": "bytes4[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)2_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[2]",
        "numberOfBytes": "64"
      },
      "t_array(t_uint64)dyn_storage": {
        "base": "t_uint64",
        "encoding": "dynamic_array",
        "label": "uint64[]",
        "numberOfBytes": "32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes4": {
        "encoding": "inplace",
        "label": "bytes4",
        "numberOfBytes": "4"
      },
      "t_contract(IZkVerifier)1426": {
        "encoding": "inplace",
        "label": "contract IZkVerifier",
        "numberOfBytes": "20"
      },
      "t_struct(BeaconBlockHeader)1798_storage": {
        "encoding": "inplace",
        "label": "struct BeaconBlockHeader",
        "members": [
          {
            "astId": 1789,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "slot",
            "offset": 0,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 1791,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "proposerIndex",
            "offset": 8,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 1793,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "parentRoot",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          },
          {
            "astId": 1795,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "stateRoot",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes32"
          },
          {
            "astId": 1797,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "bodyRoot",
            "offset": 0,
            "slot": "3",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(HeaderWithExecution)1787_storage": {
        "encoding": "inplace",
        "label": "struct HeaderWithExecution",
        "members": [
          {
            "astId": 1781,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "beacon",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(BeaconBlockHeader)1798_storage"
          },
          {
            "astId": 1783,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "executionStateRoot",
            "offset": 0,
            "slot": "4",
            "type": "t_bytes32"
          },
          {
            "astId": 1786,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "executionStateRootBranch",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_bytes32)dyn_storage"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(LightClientUpdate)1778_storage": {
        "encoding": "inplace",
        "label": "struct LightClientUpdate",
        "members": [
          {
            "astId": 1756,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "attestedHeader",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(HeaderWithExecution)1787_storage"
          },
          {
            "astId": 1759,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "finalizedHeader",
            "offset": 0,
            "slot": "6",
            "type": "t_struct(HeaderWithExecution)1787_storage"
          },
          {
            "astId": 1762,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "finalityBranch",
            "offset": 0,
            "slot": "12",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 1764,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "nextSyncCommitteeRoot",
            "offset": 0,
            "slot": "13",
            "type": "t_bytes32"
          },
          {
            "astId": 1767,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "nextSyncCommitteeBranch",
            "offset": 0,
            "slot": "14",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 1769,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "nextSyncCommitteePoseidonRoot",
            "offset": 0,
            "slot": "15",
            "type": "t_bytes32"
          },
          {
            "astId": 1772,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "nextSyncCommitteeRootMappingProof",
            "offset": 0,
            "slot": "16",
            "type": "t_struct(Proof)1827_storage"
          },
          {
            "astId": 1775,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "syncAggregate",
            "offset": 0,
            "slot": "26",
            "type": "t_struct(SyncAggregate)1808_storage"
          },
          {
            "astId": 1777,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "signatureSlot",
            "offset": 0,
            "slot": "39",
            "type": "t_uint64"
          }
        ],
        "numberOfBytes": "1280"
      },
      "t_struct(Proof)1827_storage": {
        "encoding": "inplace",
        "label": "struct Proof",
        "members": [
          {
            "astId": 1812,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "a",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)2_storage"
          },
          {
            "astId": 1818,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "b",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_array(t_uint256)2_storage)2_storage"
          },
          {
            "astId": 1822,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "c",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_uint256)2_storage"
          },
          {
            "astId": 1826,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "commitment",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_uint256)2_storage"
          }
        ],
        "numberOfBytes": "320"
      },
      "t_struct(SyncAggregate)1808_storage": {
        "encoding": "inplace",
        "label": "struct SyncAggregate",
        "members": [
          {
            "astId": 1800,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "participation",
            "offset": 0,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 1802,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "poseidonRoot",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          },
          {
            "astId": 1804,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "commitment",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 1807,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "proof",
            "offset": 0,
            "slot": "3",
            "type": "t_struct(Proof)1827_storage"
          }
        ],
        "numberOfBytes": "416"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}